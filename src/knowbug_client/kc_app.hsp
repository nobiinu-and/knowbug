// アプリケーションのコア部分

#packopt name "knowbug_client"
#packopt hide 1

#include "hsp3utf.as"
#include "kernel32.as"
#include "user32.as"

// -----------------------------------------------
// HSP の定数
// -----------------------------------------------

#define global dialog_warn 1

#define global gsel_hide (-1)
#define global gsel_show 1

#define global mesbox_readonly 0

#define global objmode_font 2

// -----------------------------------------------
// Win32 API の定数
// -----------------------------------------------

#define global NULL            0
#define global EXIT_FAILURE    1
#define global FILE_MAP_WRITE  0x0002
#define global FILE_MAP_READ   0x0004
#define global WM_USER         0x0400

// -----------------------------------------------
// ヘルパー
// -----------------------------------------------

//#ifdef _DEBUG
#define global debug_trace(%1) s_log_text@m_app += "TRACE: " + (%1) + "\n" : app_log_did_update
#define global debug_warn(%1) s_log_text@m_app += "WARN: " + (%1) + "\n" : app_log_did_update
//#else
//#define global debug_trace(%1) :
//#endif

// -----------------------------------------------
// アプリケーション
// -----------------------------------------------

#enum global s_default_window_id = 0
#enum global s_main_window_id

#module m_app

#define true 1
#define false 0

// FIXME: エンコーディングとプラットフォームも表示
#define s_title "knowbug v0.1.0"

#deffunc app_init

	app_init_globals
	app_init_windows

	infra_connect_server
	if stat == false {
		app_did_disconnect
		return
	}

	logmes "send hello"
	infra_send_hello
	return

#deffunc app_init_globals

	// サーバーと接続しているか？
	s_connected = false

	// デバッギが実行中か？
	s_debuggee_is_running = true

	// logmes の出力結果
	sdim s_log_text, 0x10000

	// スクリプト
	sdim s_script_text
	s_script_line = 0

	// データリスト
	s_list_note = "a\nb\nc\n"
	s_list_current = -1
	return

#deffunc app_init_windows \
	local x

	gsel s_default_window_id, gsel_hide

	s_main_window_width = 480
	s_main_window_height = 520
	s_main_window_left = ginfo_dispx - s_main_window_width - 16
	s_main_window_top =  ginfo_dispy - s_main_window_height - 72
	screen s_main_window_id, ginfo_dispx, ginfo_dispy, screen_hide | screen_tool, s_main_window_left, s_main_window_top, s_main_window_width, s_main_window_height

	title s_title + " [接続待ち]"

	hsvcolor , , 0xfc
	boxf

	objmode objmode_font

	s_margin = 4
	s_step_button_width = 80
	s_step_button_height = 24

	s_footer_left = 0
	s_footer_height = s_step_button_height
	s_footer_top = s_main_window_height - s_margin - s_footer_height
	s_footer_width = s_main_window_width

	s_main_left = 0
	s_main_top = 0
	s_main_height = s_footer_top - s_margin
	s_main_width = s_main_window_width

	s_list_box_left = s_main_left
	s_list_box_top = s_main_top
	s_list_box_width = s_main_width / 2
	s_list_box_height = s_main_height

	s_script_edit_left = s_list_box_width
	s_script_edit_top = s_main_top
	s_script_edit_width = s_main_width - s_list_box_width
	s_script_edit_height = s_main_height / 2

	s_log_edit_left = s_list_box_width
	s_log_edit_top = s_script_edit_top + s_script_edit_height
	s_log_edit_width = s_main_width - s_list_box_width
	s_log_edit_height = s_main_height - s_script_edit_height

	// リストボックス
	font "MS Gothic", 16
	pos s_list_box_left, s_list_box_top
	objsize s_list_box_width, s_list_box_height - 100
	listbox s_list_current, 100, s_list_note
	s_list_box_id = stat
	s_list_box_hwnd = objinfo_hwnd(s_list_box_id)

	// スクリプト
	font "MS Gothic", 13
	pos s_script_edit_left, s_script_edit_top
	mesbox s_script_text, s_script_edit_width, s_script_edit_height, mesbox_readonly
	s_script_edit_id = stat
	s_script_edit_hwnd = objinfo_hwnd(s_script_edit_id)

	// ログ
	pos s_log_edit_left, s_log_edit_top
	mesbox s_log_text, s_log_edit_width, s_log_edit_height, mesbox_readonly
	s_log_edit_id = stat
	s_log_edit_hwnd = objinfo_hwnd(s_log_edit_id)

	// フッター
	objsize s_step_button_width, s_step_button_height
	x = 8

	pos x, s_footer_top
	button gosub "実行", *l_step_continue_button
	x += s_step_button_width + 8

	pos x, s_footer_top
	button gosub "停止", *l_step_pause_button
	x += s_step_button_width + 8

	pos x, s_footer_top
	button gosub "次へ", *l_step_in_button
	x += s_step_button_width + 8

	x = s_footer_width - s_margin - s_step_button_width
	pos x, s_footer_top
	button gosub "更新", *l_refresh_button

	gsel s_main_window_id, gsel_show
	return

// -----------------------------------------------
// ボタン
// -----------------------------------------------

#deffunc app_step_continue

	logmes "app_step_continue"
	infra_send_step_continue
	return

*l_step_continue_button

	app_step_continue
	return

#deffunc app_step_pause

	logmes "app_step_pause"
	infra_send_step_pause
	return

*l_step_pause_button

	app_step_pause
	return

#deffunc app_step_in

	logmes "app_step_in"
	infra_send_step_in
	return

*l_step_in_button

	app_step_in
	return

#deffunc app_refresh

	logmes "app_refresh"
	// FIXME: update
	return

*l_refresh_button

	app_refresh
	return

// -----------------------------------------------
// サーバーからのメッセージへの応答
// -----------------------------------------------

#deffunc app_did_receive_hello_ok

	logmes "app_did_receive_hello_ok"
	s_connected = true
	title s_title
	return

#deffunc app_did_receive_shutdown

	gsel s_main_window_id, gsel_hide
	end

#deffunc app_did_receive_logmes var text

	s_log_text += text + "\n"
	app_log_did_update
	return

#deffunc app_did_receive_stopped

	logmes "stopped"
	s_debuggee_is_running = false
	return

// -----------------------------------------------
// その他
// -----------------------------------------------

#deffunc app_did_disconnect

	title s_title + " [接続なし]"
	return

#deffunc app_log_did_update

	objprm s_log_edit_id, s_log_text
	return

#global
